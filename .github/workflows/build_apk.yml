name: Construir Analista Esportivo APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    env:
      ANDROID_SDK_ROOT: /home/runner/work/_temp/android-sdk
      ANDROID_HOME: /home/runner/work/_temp/android-sdk

    steps:
    - name: Checkout repositório
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Instalar dependências base e Java
      run: |
        sudo apt-get update -y
        sudo apt-get install -y wget unzip zip openjdk-17-jdk build-essential zlib1g-dev libtinfo6 libstdc++6 libffi-dev
        java -version

    - name: Instalar Buildozer e dependências Python
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython virtualenv

    - name: Configurar diretórios do Android SDK
      run: |
        mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT"

    - name: Baixar ferramentas de linha de comando Android
      run: |
        cd /home/runner/work/_temp
        wget -O cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q cmdline-tools.zip -d cmdline-tools-temp
        mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
        mv cmdline-tools-temp/cmdline-tools/* "$ANDROID_SDK_ROOT/cmdline-tools/latest/"
        rm -rf cmdline-tools-temp cmdline-tools.zip

    - name: Configurar PATH do Android SDK
      run: |
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH

    - name: Instalar SDKs necessários (aceitar licenças automaticamente)
      run: |
        yes | sdkmanager --licenses || true
        sdkmanager --sdk_root="$ANDROID_SDK_ROOT" \
          "platform-tools" \
          "platforms;android-33" \
          "build-tools;36.0.1" \
          "build-tools;34.0.0" \
          "ndk;25.2.9519653" \
          "cmdline-tools;latest"

    - name: Verificar se aidl foi instalado
      run: |
        if [ ! -f "$ANDROID_SDK_ROOT/build-tools/36.0.1/aidl" ]; then
          echo "Aidl ainda não encontrado, tentando reinstalar build-tools..."
          sdkmanager "build-tools;36.0.1" --sdk_root="$ANDROID_SDK_ROOT"
        fi
        find "$ANDROID_SDK_ROOT/build-tools" -type f -name aidl || echo "Aidl não encontrado!"

    - name: Preparar projeto
      run: |
        if [ -f "./analista_esportivo_app_package.zip" ]; then
          unzip -q analista_esportivo_app_package.zip -d .
          echo "Pacote do app descompactado com sucesso!"
        fi
        ls -la

    - name: Construir APK com Buildozer
      run: |
        if [ -f buildozer.spec ]; then
          cd .
        elif [ -f "./analista_esportivo_app/buildozer.spec" ]; then
          cd ./analista_esportivo_app
        elif [ -f "./analista_esportivo_app_package/buildozer.spec" ]; then
          cd ./analista_esportivo_app_package
        else
          echo "Arquivo buildozer.spec não encontrado!"
          exit 1
        fi

        echo "Iniciando compilação do APK..."
        buildozer -v android debug

        echo "Verificando se o APK foi gerado..."
        if ls ./bin/*.apk 1> /dev/null 2>&1; then
          echo "APK gerado com sucesso!"
        else
          echo "Erro: Nenhum APK encontrado!"
          exit 1
        fi

    - name: Upload do APK
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: AnalistaEsportivo-APK
        path: |
          **/bin/*.apk
